<?php

/**
 * BasePaySlip
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $employee
 * @property integer $period
 * @property integer $paye
 * @property Employee $Employee
 * @property Period $Period
 * @property Paye $Paye
 * @property Doctrine_Collection $PayNhif
 * @property Doctrine_Collection $PayNssf
 * @property Doctrine_Collection $PayRelief
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BasePaySlip extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('pay_slip');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('employee', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('period', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('paye', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('Employee', array(
             'local' => 'employee',
             'foreign' => 'id'));

        $this->hasOne('Period', array(
             'local' => 'period',
             'foreign' => 'id'));

        $this->hasOne('Paye', array(
             'local' => 'paye',
             'foreign' => 'id'));

        $this->hasMany('PayNhif', array(
             'local' => 'id',
             'foreign' => 'pay_slip'));

        $this->hasMany('PayNssf', array(
             'local' => 'id',
             'foreign' => 'pay_slip'));

        $this->hasMany('PayRelief', array(
             'local' => 'id',
             'foreign' => 'pay_slip'));
    }
}